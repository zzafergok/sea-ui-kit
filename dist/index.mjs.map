{"version":3,"sources":["../src/styles/theme.ts","../src/components/Tabs/Tabs.tsx","../src/lib/utils.ts","../src/components/Form/Form.tsx","../src/components/Toast/Toast.tsx","../src/components/Dialog/Dialog.tsx","../src/components/Select/Select.tsx","../src/components/Input/Input.tsx","../src/components/Switch/Switch.tsx","../src/components/Textarea/Textarea.tsx","../src/components/Checkbox/Checkbox.tsx","../src/components/Button/Button.tsx","../src/components/auth/LoginForm.tsx","../src/hooks/useForm.ts","../src/lib/validations/auth.ts","../src/components/ThemeToggle/ThemeToggle.tsx","../src/hooks/useTheme.ts","../src/store/index.ts","../src/store/slices/themeSlice.ts","../src/store/slices/langSlice.ts","../src/locales/index.ts","../src/locales/en/translation.json","../src/locales/tr/translation.json","../src/utils/environment.ts","../src/store/slices/userSlice.ts","../src/services/api/apiSlice.ts","../src/services/api/axiosBaseQuery.ts","../src/services/api/axiosInterceptors.ts","../src/components/LanguageToggle/LanguageToggle.tsx"],"names":["React","X","Check","useTranslation","z","createSlice","translation_default","initialState","setTheme"],"mappings":"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","sourcesContent":["export const seaBlueTheme = {\n  colors: {\n    // Primary sea blues\n    primary50: 'hsl(200, 100%, 95%)',\n    primary100: 'hsl(200, 100%, 90%)',\n    primary200: 'hsl(200, 95%, 80%)',\n    primary300: 'hsl(200, 90%, 70%)',\n    primary400: 'hsl(200, 85%, 60%)',\n    primary500: 'hsl(200, 80%, 50%)', // Main sea blue\n    primary600: 'hsl(200, 85%, 40%)',\n    primary700: 'hsl(200, 90%, 30%)',\n    primary800: 'hsl(200, 95%, 20%)',\n    primary900: 'hsl(200, 100%, 10%)',\n\n    // Complementary colors\n    accent50: 'hsl(180, 100%, 95%)',\n    accent100: 'hsl(180, 100%, 90%)',\n    accent200: 'hsl(180, 95%, 80%)',\n    accent300: 'hsl(180, 90%, 70%)',\n    accent400: 'hsl(180, 85%, 60%)',\n    accent500: 'hsl(180, 80%, 50%)', // Teal accent\n    accent600: 'hsl(180, 85%, 40%)',\n    accent700: 'hsl(180, 90%, 30%)',\n    accent800: 'hsl(180, 95%, 20%)',\n    accent900: 'hsl(180, 100%, 10%)',\n\n    // Neutrals\n    neutral50: 'hsl(200, 10%, 98%)',\n    neutral100: 'hsl(200, 10%, 95%)',\n    neutral200: 'hsl(200, 10%, 90%)',\n    neutral300: 'hsl(200, 10%, 80%)',\n    neutral400: 'hsl(200, 10%, 70%)',\n    neutral500: 'hsl(200, 10%, 50%)',\n    neutral600: 'hsl(200, 10%, 40%)',\n    neutral700: 'hsl(200, 10%, 30%)',\n    neutral800: 'hsl(200, 10%, 20%)',\n    neutral900: 'hsl(200, 10%, 10%)',\n\n    // Semantic colors\n    success: 'hsl(160, 80%, 45%)',\n    warning: 'hsl(40, 90%, 50%)',\n    error: 'hsl(350, 80%, 55%)',\n    info: 'hsl(220, 80%, 55%)',\n  },\n\n  // Dark mode adjustments\n  dark: {\n    primary500: 'hsl(200, 70%, 45%)',\n    accent500: 'hsl(180, 70%, 45%)',\n    background: 'hsl(200, 20%, 10%)',\n    foreground: 'hsl(200, 10%, 95%)',\n  },\n\n  // Light mode\n  light: {\n    background: 'hsl(200, 10%, 98%)',\n    foreground: 'hsl(200, 20%, 10%)',\n  },\n\n  // Font sizes\n  fontSize: {\n    xs: '0.75rem',\n    sm: '0.875rem',\n    base: '1rem',\n    lg: '1.125rem',\n    xl: '1.25rem',\n    '2xl': '1.5rem',\n    '3xl': '1.875rem',\n    '4xl': '2.25rem',\n    '5xl': '3rem',\n  },\n\n  // Font weights\n  fontWeight: {\n    light: 300,\n    normal: 400,\n    medium: 500,\n    semibold: 600,\n    bold: 700,\n  },\n\n  // Border radius\n  radius: {\n    sm: '0.125rem',\n    md: '0.25rem',\n    lg: '0.5rem',\n    xl: '1rem',\n    full: '9999px',\n  },\n\n  // Spacing\n  spacing: {\n    0: '0',\n    1: '0.25rem',\n    2: '0.5rem',\n    3: '0.75rem',\n    4: '1rem',\n    5: '1.25rem',\n    6: '1.5rem',\n    8: '2rem',\n    10: '2.5rem',\n    12: '3rem',\n    16: '4rem',\n    20: '5rem',\n    24: '6rem',\n    32: '8rem',\n    40: '10rem',\n    48: '12rem',\n    56: '14rem',\n    64: '16rem',\n  },\n\n  // Shadow\n  shadow: {\n    sm: '0 1px 2px 0 rgba(0, 0, 0, 0.05)',\n    md: '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)',\n    lg: '0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)',\n    xl: '0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)',\n  },\n\n  // Animation\n  animation: {\n    fast: '0.15s ease-in-out',\n    default: '0.25s ease-in-out',\n    slow: '0.4s ease-in-out',\n  },\n}\n\n// tailwind.config.js\nexport const tailwindConfig = {\n  content: ['./src/**/*.{js,ts,jsx,tsx}'],\n  darkMode: 'class',\n  theme: {\n    extend: {\n      colors: {\n        primary: {\n          50: 'var(--primary-50)',\n          100: 'var(--primary-100)',\n          200: 'var(--primary-200)',\n          300: 'var(--primary-300)',\n          400: 'var(--primary-400)',\n          500: 'var(--primary-500)',\n          600: 'var(--primary-600)',\n          700: 'var(--primary-700)',\n          800: 'var(--primary-800)',\n          900: 'var(--primary-900)',\n        },\n        accent: {\n          50: 'var(--accent-50)',\n          100: 'var(--accent-100)',\n          200: 'var(--accent-200)',\n          300: 'var(--accent-300)',\n          400: 'var(--accent-400)',\n          500: 'var(--accent-500)',\n          600: 'var(--accent-600)',\n          700: 'var(--accent-700)',\n          800: 'var(--accent-800)',\n          900: 'var(--accent-900)',\n        },\n        neutral: {\n          50: 'var(--neutral-50)',\n          100: 'var(--neutral-100)',\n          200: 'var(--neutral-200)',\n          300: 'var(--neutral-300)',\n          400: 'var(--neutral-400)',\n          500: 'var(--neutral-500)',\n          600: 'var(--neutral-600)',\n          700: 'var(--neutral-700)',\n          800: 'var(--neutral-800)',\n          900: 'var(--neutral-900)',\n        },\n        success: 'var(--success)',\n        warning: 'var(--warning)',\n        error: 'var(--error)',\n        info: 'var(--info)',\n      },\n      borderRadius: {\n        sm: 'var(--radius-sm)',\n        md: 'var(--radius-md)',\n        lg: 'var(--radius-lg)',\n        xl: 'var(--radius-xl)',\n        full: 'var(--radius-full)',\n      },\n      boxShadow: {\n        sm: 'var(--shadow-sm)',\n        md: 'var(--shadow-md)',\n        lg: 'var(--shadow-lg)',\n        xl: 'var(--shadow-xl)',\n      },\n      transitionProperty: {\n        height: 'height',\n        spacing: 'margin, padding',\n      },\n      transitionTimingFunction: {\n        'in-out': 'cubic-bezier(0.4, 0, 0.2, 1)',\n      },\n      transitionDuration: {\n        fast: '150ms',\n        default: '250ms',\n        slow: '400ms',\n      },\n    },\n  },\n  plugins: [],\n}\n","import React from 'react'\n\nimport * as RadixTabs from '@radix-ui/react-tabs'\n\nimport { cn } from '@/lib/utils'\n\nconst Tabs = RadixTabs.Root\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof RadixTabs.List>,\n  React.ComponentPropsWithoutRef<typeof RadixTabs.List>\n>(({ className, ...props }, ref) => (\n  <RadixTabs.List\n    ref={ref}\n    className={cn(\n      'inline-flex h-10 items-center justify-center rounded-md bg-neutral-100 p-1 text-neutral-600 dark:bg-neutral-800 dark:text-neutral-400',\n      className,\n    )}\n    {...props}\n  />\n))\nTabsList.displayName = RadixTabs.List.displayName\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof RadixTabs.Trigger>,\n  React.ComponentPropsWithoutRef<typeof RadixTabs.Trigger>\n>(({ className, ...props }, ref) => (\n  <RadixTabs.Trigger\n    ref={ref}\n    className={cn(\n      'inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-white transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-primary-400 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-white data-[state=active]:text-primary-700 data-[state=active]:shadow-sm dark:ring-offset-neutral-950 dark:focus-visible:ring-primary-600 dark:data-[state=active]:bg-neutral-950 dark:data-[state=active]:text-primary-500',\n      className,\n    )}\n    {...props}\n  />\n))\nTabsTrigger.displayName = RadixTabs.Trigger.displayName\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof RadixTabs.Content>,\n  React.ComponentPropsWithoutRef<typeof RadixTabs.Content>\n>(({ className, ...props }, ref) => (\n  <RadixTabs.Content\n    ref={ref}\n    className={cn(\n      'mt-2 ring-offset-white focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-primary-400 focus-visible:ring-offset-2 dark:ring-offset-neutral-950 dark:focus-visible:ring-primary-600',\n      className,\n    )}\n    {...props}\n  />\n))\nTabsContent.displayName = RadixTabs.Content.displayName\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n","import { type ClassValue, clsx } from 'clsx'\nimport { twMerge } from 'tailwind-merge'\n\n/**\n * Combines class names with Tailwind CSS\n */\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\n/**\n * Debounces a function\n */\nexport function debounce<T extends (...args: any[]) => any>(fn: T, ms = 300): (...args: Parameters<T>) => void {\n  let timeoutId: ReturnType<typeof setTimeout>\n  return function (this: any, ...args: Parameters<T>) {\n    clearTimeout(timeoutId)\n    timeoutId = setTimeout(() => fn.apply(this, args), ms)\n  }\n}\n\n/**\n * Checks if the client is in dark mode\n */\nexport function isDarkMode(): boolean {\n  if (typeof window === 'undefined') return false\n  return (\n    localStorage.getItem('theme') === 'dark' ||\n    (!localStorage.getItem('theme') && window.matchMedia('(prefers-color-scheme: dark)').matches)\n  )\n}\n\n/**\n * Gets a nested object property by a dot-notation path\n */\nexport function get(obj: any, path: string, defaultValue: any = undefined) {\n  const travel = (regexp: RegExp) =>\n    String.prototype.split\n      .call(path, regexp)\n      .filter(Boolean)\n      .reduce((res, key) => (res !== null && res !== undefined ? res[key] : res), obj)\n  const result = travel(/[,[\\]]+?/) || travel(/[,.[\\]]+?/)\n  return result === undefined || result === obj ? defaultValue : result\n}\n\n/**\n * Sanitizes HTML to prevent XSS attacks\n */\nexport function sanitizeHtml(html: string): string {\n  return html\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#039;')\n}\n\n/**\n * Formats a date for display\n */\nexport function formatDate(date: Date | string, locale: string = 'en-US'): string {\n  const d = typeof date === 'string' ? new Date(date) : date\n  return d.toLocaleDateString(locale, {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n  })\n}\n\n/**\n * Type-safe LocalStorage access\n */\nexport const storage = {\n  get: <T>(key: string, defaultValue: T): T => {\n    if (typeof window === 'undefined') return defaultValue\n    try {\n      const item = window.localStorage.getItem(key)\n      return item ? (JSON.parse(item) as T) : defaultValue\n    } catch (error) {\n      console.error('Error getting item from localStorage', error)\n      return defaultValue\n    }\n  },\n  set: <T>(key: string, value: T): void => {\n    if (typeof window === 'undefined') return\n    try {\n      window.localStorage.setItem(key, JSON.stringify(value))\n    } catch (error) {\n      console.error('Error setting item in localStorage', error)\n    }\n  },\n  remove: (key: string): void => {\n    if (typeof window === 'undefined') return\n    try {\n      window.localStorage.removeItem(key)\n    } catch (error) {\n      console.error('Error removing item from localStorage', error)\n    }\n  },\n}\n","import React from 'react'\n\nimport {\n  FieldPath,\n  Controller,\n  FieldValues,\n  FormProvider,\n  SubmitHandler,\n  UseFormReturn,\n  useFormContext,\n  ControllerProps,\n} from 'react-hook-form'\n\nimport { cn } from '@/lib/utils'\n\nconst Form = <TFieldValues extends FieldValues = FieldValues, TContext = any>({\n  children,\n  className,\n  form,\n  onSubmit,\n  ...htmlFormProps\n}: React.PropsWithChildren<\n  {\n    form: UseFormReturn<TFieldValues, TContext>\n    onSubmit: SubmitHandler<TFieldValues>\n    className?: string\n  } & Omit<React.ComponentProps<'form'>, 'onSubmit'>\n>) => {\n  return (\n    <FormProvider {...form}>\n      <form className={cn('space-y-6', className)} onSubmit={form.handleSubmit(onSubmit)} {...htmlFormProps}>\n        {children}\n      </form>\n    </FormProvider>\n  )\n}\n\ninterface FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n> {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>({} as FormFieldContextValue)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>,\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error('useFormField should be used within <FormField>')\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>({} as FormItemContextValue)\n\nconst FormItem = React.forwardRef<HTMLDivElement, React.HTMLAttributes<HTMLDivElement>>(\n  ({ className, ...props }, ref) => {\n    const id = React.useId()\n\n    return (\n      <FormItemContext.Provider value={{ id }}>\n        <div ref={ref} className={cn('space-y-2', className)} {...props} />\n      </FormItemContext.Provider>\n    )\n  },\n)\nFormItem.displayName = 'FormItem'\n\nconst FormLabel = React.forwardRef<HTMLLabelElement, React.HTMLAttributes<HTMLLabelElement> & { required?: boolean }>(\n  ({ className, required, children, ...props }, ref) => {\n    const { formItemId } = useFormField()\n\n    return (\n      <label\n        ref={ref}\n        className={cn(\n          'text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70',\n          className,\n        )}\n        htmlFor={formItemId}\n        {...props}\n      >\n        {children}\n        {required && <span className='text-error ml-1'>*</span>}\n      </label>\n    )\n  },\n)\nFormLabel.displayName = 'FormLabel'\n\nconst FormDescription = React.forwardRef<HTMLParagraphElement, React.HTMLAttributes<HTMLParagraphElement>>(\n  ({ className, ...props }, ref) => {\n    const { formDescriptionId } = useFormField()\n\n    return (\n      <p\n        ref={ref}\n        id={formDescriptionId}\n        className={cn('text-xs text-neutral-500 dark:text-neutral-400', className)}\n        {...props}\n      />\n    )\n  },\n)\nFormDescription.displayName = 'FormDescription'\n\nconst FormMessage = React.forwardRef<HTMLParagraphElement, React.HTMLAttributes<HTMLParagraphElement>>(\n  ({ className, children, ...props }, ref) => {\n    const { error, formMessageId } = useFormField()\n    const body = error ? String(error?.message) : children\n\n    if (!body) {\n      return null\n    }\n\n    return (\n      <p\n        ref={ref}\n        id={formMessageId}\n        className={cn('text-xs font-medium text-error dark:text-error', className)}\n        {...props}\n      >\n        {body}\n      </p>\n    )\n  },\n)\nFormMessage.displayName = 'FormMessage'\n\nexport { Form, FormItem, FormLabel, FormField, FormMessage, useFormField, FormDescription }\n","import React from 'react'\n\nimport { X } from 'lucide-react'\nimport * as RadixToast from '@radix-ui/react-toast'\n\nimport { cn } from '@/lib/utils'\n\nconst ToastProvider = RadixToast.Provider\n\nconst ToastViewport = React.forwardRef<\n  React.ElementRef<typeof RadixToast.Viewport>,\n  React.ComponentPropsWithoutRef<typeof RadixToast.Viewport>\n>(({ className, ...props }, ref) => (\n  <RadixToast.Viewport\n    ref={ref}\n    className={cn(\n      'fixed top-0 z-[100] flex max-h-screen w-full flex-col-reverse p-4 sm:bottom-0 sm:right-0 sm:top-auto sm:flex-col md:max-w-[420px]',\n      className,\n    )}\n    {...props}\n  />\n))\nToastViewport.displayName = RadixToast.Viewport.displayName\n\nconst Toast = React.forwardRef<\n  React.ElementRef<typeof RadixToast.Root>,\n  React.ComponentPropsWithoutRef<typeof RadixToast.Root>\n>(({ className, ...props }, ref) => (\n  <RadixToast.Root\n    ref={ref}\n    className={cn(\n      'group pointer-events-auto relative flex w-full items-center justify-between space-x-4 overflow-hidden rounded-md border border-neutral-200 p-6 pr-8 shadow-lg transition-all data-[swipe=cancel]:translate-x-0 data-[swipe=end]:translate-x-[var(--radix-toast-swipe-end-x)] data-[swipe=move]:translate-x-[var(--radix-toast-swipe-move-x)] data-[swipe=move]:transition-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[swipe=end]:animate-out data-[state=closed]:fade-out-80 data-[state=closed]:slide-out-to-right-full data-[state=open]:slide-in-from-top-full data-[state=open]:sm:slide-in-from-bottom-full bg-white dark:border-neutral-800 dark:bg-neutral-950',\n      className,\n    )}\n    {...props}\n  />\n))\nToast.displayName = RadixToast.Root.displayName\n\nconst ToastAction = React.forwardRef<\n  React.ElementRef<typeof RadixToast.Action>,\n  React.ComponentPropsWithoutRef<typeof RadixToast.Action>\n>(({ className, ...props }, ref) => (\n  <RadixToast.Action\n    ref={ref}\n    className={cn(\n      'inline-flex h-8 shrink-0 items-center justify-center rounded-md border border-neutral-200 bg-transparent px-3 text-sm font-medium ring-offset-white transition-colors hover:bg-neutral-100 focus:outline-none focus:ring-2 focus:ring-primary-400 focus:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 dark:border-neutral-800 dark:ring-offset-neutral-950 dark:hover:bg-neutral-800 dark:focus:ring-primary-600',\n      className,\n    )}\n    {...props}\n  />\n))\nToastAction.displayName = RadixToast.Action.displayName\n\nconst ToastClose = React.forwardRef<\n  React.ElementRef<typeof RadixToast.Close>,\n  React.ComponentPropsWithoutRef<typeof RadixToast.Close>\n>(({ className, ...props }, ref) => (\n  <RadixToast.Close\n    ref={ref}\n    className={cn(\n      'absolute right-2 top-2 rounded-md p-1 text-neutral-500 opacity-0 transition-opacity hover:text-neutral-900 focus:opacity-100 focus:outline-none focus:ring-2 group-hover:opacity-100 dark:text-neutral-400 dark:hover:text-neutral-50',\n      className,\n    )}\n    toast-close=''\n    {...props}\n  >\n    <X className='h-4 w-4' />\n  </RadixToast.Close>\n))\nToastClose.displayName = RadixToast.Close.displayName\n\nconst ToastTitle = React.forwardRef<\n  React.ElementRef<typeof RadixToast.Title>,\n  React.ComponentPropsWithoutRef<typeof RadixToast.Title>\n>(({ className, ...props }, ref) => (\n  <RadixToast.Title ref={ref} className={cn('text-sm font-semibold', className)} {...props} />\n))\nToastTitle.displayName = RadixToast.Title.displayName\n\nconst ToastDescription = React.forwardRef<\n  React.ElementRef<typeof RadixToast.Description>,\n  React.ComponentPropsWithoutRef<typeof RadixToast.Description>\n>(({ className, ...props }, ref) => (\n  <RadixToast.Description ref={ref} className={cn('text-sm opacity-90', className)} {...props} />\n))\nToastDescription.displayName = RadixToast.Description.displayName\n\ntype ToastProps = React.ComponentPropsWithoutRef<typeof Toast>\ntype ToastActionElement = React.ReactElement<typeof ToastAction>\n\nexport {\n  type ToastProps,\n  type ToastActionElement,\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastClose,\n  ToastAction,\n}\n","import React from 'react'\n\nimport { X } from 'lucide-react'\nimport * as RadixDialog from '@radix-ui/react-dialog'\n\nimport { cn } from '@/lib/utils'\n\nconst Dialog = RadixDialog.Root\nconst DialogTrigger = RadixDialog.Trigger\n\nconst DialogPortal = ({ className, children, ...props }: RadixDialog.DialogPortalProps & { className?: string }) => (\n  <RadixDialog.Portal {...props}>\n    <div className={cn('fixed inset-0 z-50 flex items-start justify-center sm:items-center', className)}>\n      {children}\n    </div>\n  </RadixDialog.Portal>\n)\n\nDialogPortal.displayName = RadixDialog.Portal.displayName\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof RadixDialog.Overlay>,\n  React.ComponentPropsWithoutRef<typeof RadixDialog.Overlay>\n>(({ className, ...props }, ref) => (\n  <RadixDialog.Overlay\n    ref={ref}\n    className={cn(\n      'fixed inset-0 z-50 bg-black/50 backdrop-blur-sm transition-all duration-100 data-[state=closed]:animate-out data-[state=closed]:fade-out data-[state=open]:fade-in',\n      className,\n    )}\n    {...props}\n  />\n))\n\nDialogOverlay.displayName = RadixDialog.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof RadixDialog.Content>,\n  React.ComponentPropsWithoutRef<typeof RadixDialog.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <RadixDialog.Content\n      ref={ref}\n      className={cn(\n        'fixed z-50 grid w-full gap-4 rounded-lg border border-neutral-200 bg-white p-6 shadow-lg animate-in data-[state=open]:fade-in-90 data-[state=open]:slide-in-from-bottom-10 sm:max-w-lg sm:zoom-in-90 data-[state=open]:sm:slide-in-from-bottom-0',\n        'dark:border-neutral-800 dark:bg-neutral-950',\n        className,\n      )}\n      {...props}\n    >\n      {children}\n      <RadixDialog.Close className='absolute right-4 top-4 rounded-sm opacity-70 ring-offset-white transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-primary-400 focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-neutral-100 data-[state=open]:text-neutral-500 dark:ring-offset-neutral-950 dark:focus:ring-primary-600 dark:data-[state=open]:bg-neutral-800 dark:data-[state=open]:text-neutral-400'>\n        <X className='h-4 w-4' />\n        <span className='sr-only'>Close</span>\n      </RadixDialog.Close>\n    </RadixDialog.Content>\n  </DialogPortal>\n))\n\nDialogContent.displayName = RadixDialog.Content.displayName\n\nconst DialogHeader = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (\n  <div className={cn('flex flex-col space-y-1.5 text-center sm:text-left', className)} {...props} />\n)\n\nDialogHeader.displayName = 'DialogHeader'\n\nconst DialogFooter = ({ className, ...props }: React.HTMLAttributes<HTMLDivElement>) => (\n  <div className={cn('flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2', className)} {...props} />\n)\n\nDialogFooter.displayName = 'DialogFooter'\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof RadixDialog.Title>,\n  React.ComponentPropsWithoutRef<typeof RadixDialog.Title>\n>(({ className, ...props }, ref) => (\n  <RadixDialog.Title\n    ref={ref}\n    className={cn('text-lg font-semibold leading-none tracking-tight text-neutral-900 dark:text-neutral-50', className)}\n    {...props}\n  />\n))\n\nDialogTitle.displayName = RadixDialog.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof RadixDialog.Description>,\n  React.ComponentPropsWithoutRef<typeof RadixDialog.Description>\n>(({ className, ...props }, ref) => (\n  <RadixDialog.Description\n    ref={ref}\n    className={cn('text-sm text-neutral-500 dark:text-neutral-400', className)}\n    {...props}\n  />\n))\n\nDialogDescription.displayName = RadixDialog.Description.displayName\n\nexport { Dialog, DialogTrigger, DialogContent, DialogHeader, DialogFooter, DialogTitle, DialogDescription }\n","import React from 'react'\n\nimport * as RadixSelect from '@radix-ui/react-select'\nimport { Check, ChevronDown, ChevronUp } from 'lucide-react'\n\nimport { cn } from '@/lib/utils'\n\nconst Select = RadixSelect.Root\nconst SelectGroup = RadixSelect.Group\nconst SelectValue = RadixSelect.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof RadixSelect.Trigger>,\n  React.ComponentPropsWithoutRef<typeof RadixSelect.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <RadixSelect.Trigger\n    ref={ref}\n    className={cn(\n      'flex h-10 w-full items-center justify-between rounded-md border border-neutral-200 bg-white px-3 py-2 text-sm text-neutral-900 placeholder:text-neutral-500 focus:outline-none focus:ring-2 focus:ring-primary-400 focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 dark:border-neutral-800 dark:bg-neutral-950 dark:text-neutral-50 dark:placeholder:text-neutral-400 dark:focus:ring-primary-600',\n      className,\n    )}\n    {...props}\n  >\n    {children}\n    <RadixSelect.Icon asChild>\n      <ChevronDown className='h-4 w-4 opacity-50' />\n    </RadixSelect.Icon>\n  </RadixSelect.Trigger>\n))\n\nSelectTrigger.displayName = RadixSelect.Trigger.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof RadixSelect.Content>,\n  React.ComponentPropsWithoutRef<typeof RadixSelect.Content>\n>(({ className, children, position = 'popper', ...props }, ref) => (\n  <RadixSelect.Portal>\n    <RadixSelect.Content\n      ref={ref}\n      className={cn(\n        'relative z-50 min-w-[8rem] overflow-hidden rounded-md border border-neutral-200 bg-white text-neutral-900 shadow-md animate-in fade-in-80 dark:border-neutral-800 dark:bg-neutral-950 dark:text-neutral-50',\n        position === 'popper' && 'translate-y-1',\n        className,\n      )}\n      position={position}\n      {...props}\n    >\n      <RadixSelect.ScrollUpButton className='flex items-center justify-center h-6 bg-white text-neutral-600 cursor-default dark:bg-neutral-950 dark:text-neutral-400'>\n        <ChevronUp className='h-4 w-4' />\n      </RadixSelect.ScrollUpButton>\n      <RadixSelect.Viewport\n        className={cn(\n          'p-1',\n          position === 'popper' &&\n            'h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]',\n        )}\n      >\n        {children}\n      </RadixSelect.Viewport>\n      <RadixSelect.ScrollDownButton className='flex items-center justify-center h-6 bg-white text-neutral-600 cursor-default dark:bg-neutral-950 dark:text-neutral-400'>\n        <ChevronDown className='h-4 w-4' />\n      </RadixSelect.ScrollDownButton>\n    </RadixSelect.Content>\n  </RadixSelect.Portal>\n))\n\nSelectContent.displayName = RadixSelect.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof RadixSelect.Label>,\n  React.ComponentPropsWithoutRef<typeof RadixSelect.Label>\n>(({ className, ...props }, ref) => (\n  <RadixSelect.Label\n    ref={ref}\n    className={cn('py-1.5 pl-8 pr-2 text-sm font-semibold text-neutral-900 dark:text-neutral-100', className)}\n    {...props}\n  />\n))\n\nSelectLabel.displayName = RadixSelect.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof RadixSelect.Item>,\n  React.ComponentPropsWithoutRef<typeof RadixSelect.Item>\n>(({ className, children, ...props }, ref) => (\n  <RadixSelect.Item\n    ref={ref}\n    className={cn(\n      'relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 focus:bg-primary-100 focus:text-primary-800 dark:focus:bg-primary-800 dark:focus:text-primary-100',\n      className,\n    )}\n    {...props}\n  >\n    <span className='absolute left-2 flex h-3.5 w-3.5 items-center justify-center'>\n      <RadixSelect.ItemIndicator>\n        <Check className='h-4 w-4' />\n      </RadixSelect.ItemIndicator>\n    </span>\n    <RadixSelect.ItemText>{children}</RadixSelect.ItemText>\n  </RadixSelect.Item>\n))\n\nSelectItem.displayName = RadixSelect.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof RadixSelect.Separator>,\n  React.ComponentPropsWithoutRef<typeof RadixSelect.Separator>\n>(({ className, ...props }, ref) => (\n  <RadixSelect.Separator\n    ref={ref}\n    className={cn('-mx-1 my-1 h-px bg-neutral-100 dark:bg-neutral-800', className)}\n    {...props}\n  />\n))\n\nSelectSeparator.displayName = RadixSelect.Separator.displayName\n\nexport { Select, SelectGroup, SelectValue, SelectTrigger, SelectContent, SelectLabel, SelectItem, SelectSeparator }\n","import React from 'react'\nimport { cn } from '@/lib/utils'\n\nexport interface InputProps extends React.InputHTMLAttributes<HTMLInputElement> {\n  error?: string\n}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(({ className, type, error, ...props }, ref) => {\n  return (\n    <div className='relative w-full'>\n      <input\n        type={type}\n        className={cn(\n          'flex h-10 w-full rounded-md border border-neutral-200 bg-white px-3 py-2 text-sm text-neutral-900 placeholder:text-neutral-500 focus:outline-none focus:ring-2 focus:ring-primary-400 focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 dark:border-neutral-800 dark:bg-neutral-950 dark:text-neutral-50 dark:placeholder:text-neutral-400 dark:focus:ring-primary-600',\n          error && 'border-error focus:ring-error',\n          className,\n        )}\n        ref={ref}\n        {...props}\n      />\n      {error && <p className='mt-1 text-xs text-error dark:text-error'>{error}</p>}\n    </div>\n  )\n})\n\nInput.displayName = 'Input'\n\nexport { Input }\n","import React from 'react'\n\nimport * as RadixSwitch from '@radix-ui/react-switch'\n\nimport { cn } from '@/lib/utils'\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof RadixSwitch.Root>,\n  React.ComponentPropsWithoutRef<typeof RadixSwitch.Root>\n>(({ className, ...props }, ref) => (\n  <RadixSwitch.Root\n    className={cn(\n      'peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-primary-400 focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary-500 data-[state=unchecked]:bg-neutral-200 dark:data-[state=unchecked]:bg-neutral-700 dark:focus-visible:ring-primary-600 dark:data-[state=checked]:bg-primary-600',\n      className,\n    )}\n    {...props}\n    ref={ref}\n  >\n    <RadixSwitch.Thumb\n      className={cn(\n        'pointer-events-none block h-5 w-5 rounded-full bg-white shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0 dark:bg-neutral-50',\n      )}\n    />\n  </RadixSwitch.Root>\n))\n\nSwitch.displayName = RadixSwitch.Root.displayName\n\nexport { Switch }\n","import React from 'react'\n\nimport { cn } from '@/lib/utils'\n\nexport interface TextareaProps extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {\n  error?: string\n}\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(({ className, error, ...props }, ref) => {\n  return (\n    <div className='relative w-full'>\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-neutral-200 bg-white px-3 py-2 text-sm text-neutral-900 placeholder:text-neutral-500 focus:outline-none focus:ring-2 focus:ring-primary-400 focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 dark:border-neutral-800 dark:bg-neutral-950 dark:text-neutral-50 dark:placeholder:text-neutral-400 dark:focus:ring-primary-600',\n          error && 'border-error focus:ring-error',\n          className,\n        )}\n        ref={ref}\n        {...props}\n      />\n      {error && <p className='mt-1 text-xs text-error dark:text-error'>{error}</p>}\n    </div>\n  )\n})\n\nTextarea.displayName = 'Textarea'\n\nexport { Textarea }\n","import React from 'react'\n\nimport { Check } from 'lucide-react'\nimport * as RadixCheckbox from '@radix-ui/react-checkbox'\n\nimport { cn } from '@/lib/utils'\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof RadixCheckbox.Root>,\n  React.ComponentPropsWithoutRef<typeof RadixCheckbox.Root>\n>(({ className, ...props }, ref) => (\n  <RadixCheckbox.Root\n    ref={ref}\n    className={cn(\n      'peer h-4 w-4 shrink-0 rounded-sm border border-neutral-200 focus:ring-primary-400 focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 dark:border-neutral-700 dark:focus:ring-primary-600 data-[state=checked]:bg-primary-500 data-[state=checked]:text-white dark:data-[state=checked]:bg-primary-600',\n      className,\n    )}\n    {...props}\n  >\n    <RadixCheckbox.Indicator className='flex items-center justify-center text-current'>\n      <Check className='h-3 w-3' />\n    </RadixCheckbox.Indicator>\n  </RadixCheckbox.Root>\n))\n\nCheckbox.displayName = RadixCheckbox.Root.displayName\n\nexport { Checkbox }\n","import React, { forwardRef } from 'react'\n\nimport { cva, type VariantProps } from 'class-variance-authority'\n\nimport { cn } from '@/lib/utils'\n\nconst buttonVariants = cva(\n  'inline-flex items-center justify-center rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-primary-400 focus-visible:ring-offset-2 disabled:opacity-50 disabled:pointer-events-none',\n  {\n    variants: {\n      variant: {\n        default: 'bg-primary-500 text-white hover:bg-primary-600 active:bg-primary-700',\n        secondary: 'bg-accent-500 text-white hover:bg-accent-600 active:bg-accent-700',\n        outline: 'border border-primary-500 text-primary-500 hover:bg-primary-50 active:bg-primary-100',\n        ghost: 'text-primary-500 hover:bg-primary-50 active:bg-primary-100 hover:text-primary-600',\n        link: 'text-primary-500 underline-offset-4 hover:underline hover:text-primary-600',\n        destructive: 'bg-error text-white hover:bg-red-600 active:bg-red-700',\n      },\n      size: {\n        sm: 'h-8 px-3 text-xs',\n        md: 'h-10 px-4',\n        lg: 'h-12 px-6 text-lg',\n        icon: 'h-10 w-10',\n      },\n      fullWidth: {\n        true: 'w-full',\n      },\n    },\n    defaultVariants: {\n      variant: 'default',\n      size: 'md',\n      fullWidth: false,\n    },\n  },\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n  className?: string\n  disabled?: boolean\n  fullWidth?: boolean\n  children: React.ReactNode\n  size?: 'sm' | 'md' | 'lg' | 'icon'\n  variant?: 'default' | 'secondary' | 'outline' | 'ghost'\n}\n\nconst Button = forwardRef<HTMLButtonElement, ButtonProps>(\n  (\n    {\n      children,\n      className,\n      size = 'md',\n      asChild = false,\n      disabled = false,\n      fullWidth = false,\n      variant = 'default',\n      ...props\n    },\n    ref,\n  ) => {\n    return (\n      <button ref={ref} className={cn(buttonVariants({ variant, size, fullWidth, className }))} {...props}>\n        {children}\n      </button>\n    )\n  },\n)\n\nButton.displayName = 'Button'\n\nexport { Button, buttonVariants }\n","import React from 'react'\n\nimport { useTranslation } from 'react-i18next'\n\nimport { useForm } from '@/hooks/useForm'\n\nimport { Form, FormItem, FormField, FormLabel, FormMessage } from '../Form/Form'\nimport { Input } from '../Input/Input'\nimport { Button } from '../Button/Button'\nimport { Checkbox } from '../Checkbox/Checkbox'\n\nimport { loginSchema, type LoginFormValues } from '@/lib/validations/auth'\n\ninterface LoginFormProps {\n  onSubmit: (data: LoginFormValues) => void\n  isLoading?: boolean\n}\n\nexport function LoginForm({ onSubmit, isLoading = false }: LoginFormProps) {\n  const { t } = useTranslation()\n\n  const form = useForm(loginSchema, {\n    defaultValues: {\n      email: '',\n      password: '',\n      rememberMe: false,\n    },\n  })\n\n  return (\n    <Form form={form} onSubmit={onSubmit} className='space-y-6'>\n      <FormField\n        control={form.control}\n        name='email'\n        render={({ field }) => (\n          <FormItem>\n            <FormLabel required>{t('auth.email')}</FormLabel>\n            <Input type='email' placeholder='email@example.com' disabled={isLoading} {...field} />\n            <FormMessage />\n          </FormItem>\n        )}\n      />\n\n      <FormField\n        control={form.control}\n        name='password'\n        render={({ field }) => (\n          <FormItem>\n            <FormLabel required>{t('auth.password')}</FormLabel>\n            <Input type='password' disabled={isLoading} {...field} />\n            <FormMessage />\n          </FormItem>\n        )}\n      />\n\n      <div className='flex items-center justify-between'>\n        <FormField\n          control={form.control}\n          name='rememberMe'\n          render={({ field }) => (\n            <div className='flex items-center space-x-2'>\n              <Checkbox id='rememberMe' checked={field.value} onCheckedChange={field.onChange} disabled={isLoading} />\n              <label\n                htmlFor='rememberMe'\n                className='text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70'\n              >\n                {t('auth.rememberMe')}\n              </label>\n            </div>\n          )}\n        />\n\n        <Button variant='ghost' className='px-0 text-sm' disabled={isLoading} type='button'>\n          {t('auth.forgotPassword')}\n        </Button>\n      </div>\n\n      <Button type='submit' fullWidth disabled={isLoading} className='mt-6'>\n        {isLoading ? t('components.button.loadingText') : t('auth.login')}\n      </Button>\n    </Form>\n  )\n}\n","import { z } from 'zod'\nimport { useTranslation } from 'react-i18next'\nimport { zodResolver } from '@hookform/resolvers/zod'\nimport { useForm as useReactHookForm, UseFormProps } from 'react-hook-form'\n\n/**\n * Enhanced form hook that combines React Hook Form with Zod validation\n * and adds internationalization support for error messages\n */\nexport function useForm<T extends z.ZodType<any, any>>(\n  schema: T,\n  options?: Omit<UseFormProps<z.infer<T>>, 'resolver'>,\n) {\n  const { t } = useTranslation()\n\n  // Create a custom resolver that translates Zod error messages\n  const resolver = zodResolver(schema, {\n    errorMap: (issue, ctx) => {\n      // Translate common error messages\n      let message = issue.message\n\n      // Map Zod error codes to translation keys\n      switch (issue.code) {\n        case z.ZodIssueCode.invalid_type:\n          if (issue.received === 'undefined' || issue.received === 'null') {\n            message = t('validation.required')\n          }\n          break\n        case z.ZodIssueCode.too_small:\n          if (issue.type === 'string') {\n            message = t('validation.minLength', { min: issue.minimum })\n          }\n          break\n        case z.ZodIssueCode.too_big:\n          if (issue.type === 'string') {\n            message = t('validation.maxLength', { max: issue.maximum })\n          }\n          break\n        case z.ZodIssueCode.invalid_string:\n          if (issue.validation === 'email') {\n            message = t('validation.email')\n          } else {\n            message = t('validation.invalidFormat')\n          }\n          break\n      }\n\n      return { message: message ?? ctx.defaultError }\n    },\n  })\n\n  // Return the useForm hook with our custom resolver\n  return useReactHookForm<z.infer<T>>({\n    resolver,\n    ...options,\n  })\n}\n","import { z } from 'zod'\n\nexport const loginSchema = z.object({\n  email: z.string().min(1, { message: 'Email is required' }).email({ message: 'Invalid email address' }),\n  password: z\n    .string()\n    .min(1, { message: 'Password is required' })\n    .min(8, { message: 'Password must be at least 8 characters' }),\n  rememberMe: z.boolean().optional(),\n})\n\nexport const registerSchema = z\n  .object({\n    name: z\n      .string()\n      .min(1, { message: 'Name is required' })\n      .min(2, { message: 'Name must be at least 2 characters' })\n      .max(50, { message: 'Name must be less than 50 characters' }),\n    email: z.string().min(1, { message: 'Email is required' }).email({ message: 'Invalid email address' }),\n    password: z\n      .string()\n      .min(1, { message: 'Password is required' })\n      .min(8, { message: 'Password must be at least 8 characters' })\n      .regex(/[A-Z]/, {\n        message: 'Password must contain at least one uppercase letter',\n      })\n      .regex(/[a-z]/, {\n        message: 'Password must contain at least one lowercase letter',\n      })\n      .regex(/[0-9]/, { message: 'Password must contain at least one number' }),\n    confirmPassword: z.string().min(1, { message: 'Confirm password is required' }),\n    terms: z.literal(true, {\n      errorMap: () => ({ message: 'You must accept the terms and conditions' }),\n    }),\n  })\n  .refine((data) => data.password === data.confirmPassword, {\n    message: 'Passwords do not match',\n    path: ['confirmPassword'],\n  })\n\nexport const forgotPasswordSchema = z.object({\n  email: z.string().min(1, { message: 'Email is required' }).email({ message: 'Invalid email address' }),\n})\n\nexport const resetPasswordSchema = z\n  .object({\n    password: z\n      .string()\n      .min(1, { message: 'Password is required' })\n      .min(8, { message: 'Password must be at least 8 characters' })\n      .regex(/[A-Z]/, {\n        message: 'Password must contain at least one uppercase letter',\n      })\n      .regex(/[a-z]/, {\n        message: 'Password must contain at least one lowercase letter',\n      })\n      .regex(/[0-9]/, { message: 'Password must contain at least one number' }),\n    confirmPassword: z.string().min(1, { message: 'Confirm password is required' }),\n  })\n  .refine((data) => data.password === data.confirmPassword, {\n    message: 'Passwords do not match',\n    path: ['confirmPassword'],\n  })\n\nexport type LoginFormValues = z.infer<typeof loginSchema>\nexport type RegisterFormValues = z.infer<typeof registerSchema>\nexport type ForgotPasswordFormValues = z.infer<typeof forgotPasswordSchema>\nexport type ResetPasswordFormValues = z.infer<typeof resetPasswordSchema>\n","import React from 'react'\n\nimport { Moon, Sun } from 'lucide-react'\nimport { useTranslation } from 'react-i18next'\n\nimport { Button } from '../Button/Button'\nimport { useTheme } from '../../hooks/useTheme'\n\nimport { cn } from '../../lib/utils'\n\ninterface ThemeToggleProps {\n  className?: string\n}\n\nexport function ThemeToggle({ className }: ThemeToggleProps) {\n  const { t } = useTranslation()\n  const { theme, setTheme } = useTheme()\n\n  return (\n    <Button\n      variant='ghost'\n      size='icon'\n      onClick={() => setTheme(theme === 'dark' ? 'light' : 'dark')}\n      className={cn('rounded-full', className)}\n      aria-label={t(theme === 'dark' ? 'theme.light' : 'theme.dark')}\n    >\n      <Sun className='h-5 w-5 rotate-0 scale-100 transition-all dark:-rotate-90 dark:scale-0' />\n      <Moon className='absolute h-5 w-5 rotate-90 scale-0 transition-all dark:rotate-0 dark:scale-100' />\n    </Button>\n  )\n}\n","import { useEffect } from 'react'\n\nimport { useAppDispatch, useAppSelector } from '@/store'\nimport { setTheme, selectEffectiveTheme, updateSystemPreference } from '@/store/slices/themeSlice'\n\n/**\n * Hook for managing theme state and system preferences\n */\nexport function useTheme() {\n  const dispatch = useAppDispatch()\n  const effectiveTheme = useAppSelector(selectEffectiveTheme)\n\n  // Effect to watch for system preference changes\n  useEffect(() => {\n    if (typeof window !== 'undefined') {\n      // Get stored theme from localStorage or use system default\n      const storedTheme = localStorage.getItem('theme') || 'system'\n      dispatch(setTheme(storedTheme as 'light' | 'dark' | 'system'))\n\n      // Set up listener for system preference changes\n      const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)')\n\n      // Initialize system preference\n      dispatch(updateSystemPreference(mediaQuery.matches ? 'dark' : 'light'))\n\n      // Update when system preference changes\n      const handleChange = (e: MediaQueryListEvent) => {\n        dispatch(updateSystemPreference(e.matches ? 'dark' : 'light'))\n      }\n\n      mediaQuery.addEventListener('change', handleChange)\n\n      return () => {\n        mediaQuery.removeEventListener('change', handleChange)\n      }\n    }\n  }, [dispatch])\n\n  // Effect to apply theme to document\n  useEffect(() => {\n    if (typeof window !== 'undefined' && typeof document !== 'undefined') {\n      const root = document.documentElement\n\n      if (effectiveTheme === 'dark') {\n        root.classList.add('dark')\n      } else {\n        root.classList.remove('dark')\n      }\n    }\n  }, [effectiveTheme])\n\n  return {\n    theme: effectiveTheme,\n    setTheme: (theme: 'light' | 'dark' | 'system') => dispatch(setTheme(theme)),\n  }\n}\n","import { configureStore } from '@reduxjs/toolkit'\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\n\nimport themeReducer from './slices/themeSlice'\nimport langReducer from './slices/langSlice'\nimport userReducer from './slices/userSlice'\nimport { apiSlice } from '../services/api/apiSlice'\n\nimport { isDevelopment } from '../utils/environment'\n\n// Tipler için ayrı bir dosya oluşturalım\nimport type { ThemeState } from './slices/themeSlice'\nimport type { LangState } from './slices/langSlice'\nimport type { UserState } from './slices/userSlice'\n\n// Store tipi tanımlaması\nexport interface AppStore {\n  theme: ThemeState\n  lang: LangState\n  user: UserState\n  api: ReturnType<typeof apiSlice.reducer>\n}\n\nexport const store = configureStore({\n  reducer: {\n    theme: themeReducer,\n    lang: langReducer,\n    user: userReducer,\n    [apiSlice.reducerPath]: apiSlice.reducer,\n  },\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(apiSlice.middleware),\n  devTools: isDevelopment,\n})\n\n// Infer the RootState and AppDispatch types from the store itself\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppDispatch = typeof store.dispatch\n\n// Use throughout your app instead of plain useDispatch and useSelector\nexport const useAppDispatch = () => useDispatch<AppDispatch>()\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { RootState } from '../index'\nimport { isDarkMode } from '../../lib/utils'\n\nexport type ThemeMode = 'light' | 'dark' | 'system'\n\n// ThemeState tipini export edin\nexport interface ThemeState {\n  mode: ThemeMode\n  systemPreference: 'light' | 'dark'\n}\n\n// Initialize state with system preference if available\nconst initialState: ThemeState = {\n  mode: 'system',\n  systemPreference: isDarkMode() ? 'dark' : 'light',\n}\n\nexport const themeSlice = createSlice({\n  name: 'theme',\n  initialState,\n  reducers: {\n    setTheme: (state, action: PayloadAction<ThemeMode>) => {\n      state.mode = action.payload\n\n      // Update localStorage when theme changes\n      if (typeof window !== 'undefined') {\n        localStorage.setItem('theme', action.payload)\n      }\n    },\n    updateSystemPreference: (state, action: PayloadAction<'light' | 'dark'>) => {\n      state.systemPreference = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { setTheme, updateSystemPreference } = themeSlice.actions\n\n// Selectors\nexport const selectTheme = (state: RootState) => state.theme.mode\nexport const selectEffectiveTheme = (state: RootState) =>\n  state.theme.mode === 'system' ? state.theme.systemPreference : state.theme.mode\n\nexport default themeSlice.reducer\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { RootState } from '../index'\nimport i18n from '../../locales'\n\n// LangState tipini export edin\nexport interface LangState {\n  currentLanguage: string\n  availableLanguages: string[]\n}\n\nconst initialState: LangState = {\n  currentLanguage: i18n.language || 'en',\n  availableLanguages: ['en', 'tr'],\n}\n\nexport const langSlice = createSlice({\n  name: 'lang',\n  initialState,\n  reducers: {\n    setLanguage: (state, action: PayloadAction<string>) => {\n      const lang = action.payload\n\n      // Only update if it's one of the available languages\n      if (state.availableLanguages.includes(lang)) {\n        state.currentLanguage = lang\n        i18n.changeLanguage(lang)\n\n        // Update localStorage when language changes\n        if (typeof window !== 'undefined') {\n          localStorage.setItem('language', lang)\n        }\n      }\n    },\n  },\n})\n\n// Actions\nexport const { setLanguage } = langSlice.actions\n\n// Selectors\nexport const selectCurrentLanguage = (state: RootState) => state.lang?.currentLanguage\nexport const selectAvailableLanguages = (state: RootState) => state.lang?.availableLanguages\n\nexport default langSlice.reducer\n","import i18n from 'i18next'\nimport { initReactI18next } from 'react-i18next'\nimport LanguageDetector from 'i18next-browser-languagedetector'\n\nimport enTranslation from './en/translation.json'\nimport trTranslation from './tr/translation.json'\n\nimport { isDevelopment } from '../utils/environment'\n\n// Resources for i18next\nconst resources = {\n  en: {\n    translation: enTranslation,\n  },\n  tr: {\n    translation: trTranslation,\n  },\n}\n\n// Set up i18n\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  .init({\n    resources,\n    fallbackLng: 'en',\n    debug: isDevelopment,\n    interpolation: {\n      escapeValue: false, // React already escapes values\n    },\n    detection: {\n      order: ['localStorage', 'navigator'],\n      lookupLocalStorage: 'language',\n    },\n  })\n\nexport default i18n\n\n// Type definition for translations to enable type safety\nexport type TFunction = typeof enTranslation\n","{\n  \"common\": {\n    \"loading\": \"Loading...\",\n    \"error\": \"An error occurred\",\n    \"success\": \"Success\",\n    \"cancel\": \"Cancel\",\n    \"save\": \"Save\",\n    \"edit\": \"Edit\",\n    \"delete\": \"Delete\",\n    \"search\": \"Search\",\n    \"filter\": \"Filter\",\n    \"noResults\": \"No results found\"\n  },\n  \"auth\": {\n    \"login\": \"Login\",\n    \"logout\": \"Logout\",\n    \"register\": \"Register\",\n    \"forgotPassword\": \"Forgot Password\",\n    \"email\": \"Email\",\n    \"password\": \"Password\",\n    \"confirmPassword\": \"Confirm Password\",\n    \"username\": \"Username\",\n    \"rememberMe\": \"Remember Me\"\n  },\n  \"navigation\": {\n    \"home\": \"Home\",\n    \"profile\": \"Profile\",\n    \"settings\": \"Settings\",\n    \"dashboard\": \"Dashboard\",\n    \"users\": \"Users\",\n    \"about\": \"About\"\n  },\n  \"validation\": {\n    \"required\": \"This field is required\",\n    \"email\": \"Please enter a valid email address\",\n    \"minLength\": \"Must be at least {{min}} characters\",\n    \"maxLength\": \"Must be at most {{max}} characters\",\n    \"passwordMatch\": \"Passwords must match\",\n    \"invalidFormat\": \"Invalid format\"\n  },\n  \"theme\": {\n    \"light\": \"Light\",\n    \"dark\": \"Dark\",\n    \"system\": \"System\"\n  },\n  \"components\": {\n    \"button\": {\n      \"loadingText\": \"Please wait...\"\n    },\n    \"dialog\": {\n      \"close\": \"Close\"\n    },\n    \"datePicker\": {\n      \"placeholder\": \"Select date...\",\n      \"today\": \"Today\"\n    }\n  }\n}\n","{\n  \"common\": {\n    \"loading\": \"Yükleniyor...\",\n    \"error\": \"Bir hata oluştu\",\n    \"success\": \"Başarılı\",\n    \"cancel\": \"İptal\",\n    \"save\": \"Kaydet\",\n    \"edit\": \"Düzenle\",\n    \"delete\": \"Sil\",\n    \"search\": \"Ara\",\n    \"filter\": \"Filtrele\",\n    \"noResults\": \"Sonuç bulunamadı\"\n  },\n  \"auth\": {\n    \"login\": \"Giriş Yap\",\n    \"logout\": \"Çıkış Yap\",\n    \"register\": \"Kayıt Ol\",\n    \"forgotPassword\": \"Şifremi Unuttum\",\n    \"email\": \"E-posta\",\n    \"password\": \"Şifre\",\n    \"confirmPassword\": \"Şifre Tekrar\",\n    \"username\": \"Kullanıcı Adı\",\n    \"rememberMe\": \"Beni Hatırla\"\n  },\n  \"navigation\": {\n    \"home\": \"Ana Sayfa\",\n    \"profile\": \"Profil\",\n    \"settings\": \"Ayarlar\",\n    \"dashboard\": \"Kontrol Paneli\",\n    \"users\": \"Kullanıcılar\",\n    \"about\": \"Hakkında\"\n  },\n  \"validation\": {\n    \"required\": \"Bu alan zorunludur\",\n    \"email\": \"Lütfen geçerli bir e-posta adresi girin\",\n    \"minLength\": \"En az {{min}} karakter olmalıdır\",\n    \"maxLength\": \"En fazla {{max}} karakter olmalıdır\",\n    \"passwordMatch\": \"Şifreler eşleşmelidir\",\n    \"invalidFormat\": \"Geçersiz format\"\n  },\n  \"theme\": {\n    \"light\": \"Açık\",\n    \"dark\": \"Koyu\",\n    \"system\": \"Sistem\"\n  },\n  \"components\": {\n    \"button\": {\n      \"loadingText\": \"Lütfen bekleyin...\"\n    },\n    \"dialog\": {\n      \"close\": \"Kapat\"\n    },\n    \"datePicker\": {\n      \"placeholder\": \"Tarih seçin...\",\n      \"today\": \"Bugün\"\n    }\n  }\n}\n","/**\n * Ortam değişkenlerine güvenli erişim sağlayan yardımcı fonksiyonlar\n * Browser ve server ortamlarında tutarlı davranış için tasarlanmıştır\n */\nexport const isServer = typeof window === 'undefined'\nexport const isDevelopment = process.env.NODE_ENV !== 'production'\n\n/**\n * Ortam değişkenine güvenli erişim sağlar\n * @param key - Ortam değişkeni adı\n * @param defaultValue - Değişken tanımlı değilse kullanılacak varsayılan değer\n */\nexport const getEnvironmentVariable = (key: string, defaultValue: string = ''): string => {\n  if (typeof process !== 'undefined' && process.env && process.env[key]) {\n    return process.env[key] as string\n  }\n  return defaultValue\n}\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { RootState } from '../index'\n\nexport interface User {\n  id: string\n  username: string\n  email: string\n  avatar?: string\n  role: string\n}\n\n// UserState tipini export edin\nexport interface UserState {\n  user: User | null\n  isAuthenticated: boolean\n  isLoading: boolean\n  error: string | null\n}\n\nconst initialState: UserState = {\n  user: null,\n  isAuthenticated: false,\n  isLoading: false,\n  error: null,\n}\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    setUser: (state, action: PayloadAction<User>) => {\n      state.user = action.payload\n      state.isAuthenticated = true\n      state.error = null\n    },\n    logoutUser: (state) => {\n      state.user = null\n      state.isAuthenticated = false\n    },\n    setLoading: (state, action: PayloadAction<boolean>) => {\n      state.isLoading = action.payload\n    },\n    setError: (state, action: PayloadAction<string | null>) => {\n      state.error = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { setUser, logoutUser, setLoading, setError } = userSlice.actions\n\n// Selectors\nexport const selectUser = (state: RootState) => state.user.user\nexport const selectIsAuthenticated = (state: RootState) => state.user.isAuthenticated\nexport const selectIsLoading = (state: RootState) => state.user.isLoading\nexport const selectError = (state: RootState) => state.user.error\n\nexport default userSlice.reducer\n","import { createApi } from '@reduxjs/toolkit/query/react'\nimport { axiosBaseQuery } from './axiosBaseQuery'\n\n// API slice tipini export et\nexport interface ApiSliceState {\n  queries: Record<string, any>\n  mutations: Record<string, any>\n  provided: Record<string, any>\n  subscriptions: Record<string, any>\n  config: Record<string, any>\n}\n\nexport const apiSlice = createApi({\n  reducerPath: 'api',\n  baseQuery: axiosBaseQuery({\n    baseUrl: process.env.NEXT_PUBLIC_API_URL || 'http://localhost:3000/api',\n  }),\n  tagTypes: ['User', 'Posts', 'Settings'],\n  endpoints: (_builder) => ({}),\n})\n","import { BaseQueryFn } from '@reduxjs/toolkit/query'\nimport axios, { AxiosRequestConfig, AxiosError } from 'axios'\n\nimport { setupAxiosInterceptors } from './axiosInterceptors'\n\nexport interface BaseQueryArgs {\n  baseUrl: string\n}\n\nexport const axiosBaseQuery = (\n  { baseUrl }: BaseQueryArgs = { baseUrl: '' },\n): BaseQueryFn<\n  {\n    url: string\n    method?: AxiosRequestConfig['method']\n    data?: AxiosRequestConfig['data']\n    params?: AxiosRequestConfig['params']\n    headers?: AxiosRequestConfig['headers']\n  },\n  unknown,\n  unknown\n> => {\n  const axiosInstance = axios.create({\n    baseURL: baseUrl,\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  })\n\n  // Set up interceptors\n  setupAxiosInterceptors(axiosInstance)\n\n  return async ({ url, method = 'GET', data, params, headers }) => {\n    try {\n      const result = await axiosInstance({\n        url,\n        method,\n        data,\n        params,\n        headers,\n      })\n\n      return { data: result.data }\n    } catch (axiosError) {\n      const err = axiosError as AxiosError\n      return {\n        error: {\n          status: err.response?.status,\n          data: err.response?.data || err.message,\n        },\n      }\n    }\n  }\n}\n","import { AxiosError, AxiosInstance, AxiosResponse, InternalAxiosRequestConfig } from 'axios'\n\nimport { store } from '@/store'\nimport { logoutUser } from '@/store/slices/userSlice'\n\n/**\n * Setup axios interceptors for handling authentication and error cases\n */\nexport const setupAxiosInterceptors = (axiosInstance: AxiosInstance) => {\n  // Request interceptor\n  axiosInstance.interceptors.request.use(\n    (config: InternalAxiosRequestConfig) => {\n      // Get token from localStorage if available\n      const token = typeof window !== 'undefined' ? localStorage.getItem('token') : null\n\n      // Add token to headers if available\n      // config.headers is guaranteed to be defined with InternalAxiosRequestConfig\n      if (token) {\n        config.headers.Authorization = `Bearer ${token}`\n      }\n\n      return config\n    },\n    (error: AxiosError) => Promise.reject(error),\n  )\n\n  // Response interceptor\n  axiosInstance.interceptors.response.use(\n    (response: AxiosResponse) => response,\n    async (error: AxiosError) => {\n      const originalRequest = error.config\n\n      // Handle token expiration\n      if (error.response?.status === 401 && originalRequest) {\n        // Try to refresh token if refresh token is available\n        const refreshToken = typeof window !== 'undefined' ? localStorage.getItem('refreshToken') : null\n\n        if (refreshToken) {\n          try {\n            // Call refresh token endpoint\n            const response = await axiosInstance.post('/auth/refresh', {\n              refreshToken,\n            })\n\n            // Update tokens in localStorage\n            localStorage.setItem('token', response.data.token)\n            localStorage.setItem('refreshToken', response.data.refreshToken)\n\n            // Update Authorization header\n            if (originalRequest.headers) {\n              originalRequest.headers.Authorization = `Bearer ${response.data.token}`\n            }\n\n            // Retry the original request\n            return axiosInstance(originalRequest)\n          } catch (refreshError) {\n            // If refresh token is invalid, log out the user\n            store.dispatch(logoutUser())\n            localStorage.removeItem('token')\n            localStorage.removeItem('refreshToken')\n          }\n        } else {\n          // If no refresh token available, log out user\n          store.dispatch(logoutUser())\n        }\n      }\n\n      // Global error handler\n      switch (error.response?.status) {\n        case 400:\n          console.error('Bad Request:', error.response.data)\n          break\n        case 403:\n          console.error('Forbidden:', error.response.data)\n          break\n        case 404:\n          console.error('Not Found:', error.response.data)\n          break\n        case 500:\n          console.error('Server Error:', error.response.data)\n          break\n        default:\n          console.error('Network Error:', error.message)\n      }\n      return Promise.reject(error)\n    },\n  )\n}\n","import React from 'react'\n\nimport { Globe } from 'lucide-react'\n\nimport { Select, SelectItem, SelectValue, SelectContent, SelectTrigger } from '../Select/Select'\n\nimport { setLanguage, selectCurrentLanguage, selectAvailableLanguages } from '@/store/slices/langSlice'\nimport { useAppDispatch, useAppSelector } from '@/store'\n\nimport { cn } from '@/lib/utils'\n\ninterface LanguageToggleProps {\n  className?: string\n}\n\nexport function LanguageToggle({ className }: LanguageToggleProps) {\n  const dispatch = useAppDispatch()\n\n  const currentLanguage = useAppSelector(selectCurrentLanguage)\n  const availableLanguages = useAppSelector(selectAvailableLanguages)\n\n  const handleLanguageChange = (value: string) => {\n    dispatch(setLanguage(value))\n  }\n\n  return (\n    <div className={cn('flex items-center space-x-2', className)}>\n      <Globe className='h-4 w-4 text-neutral-500' />\n      <Select value={currentLanguage} onValueChange={handleLanguageChange}>\n        <SelectTrigger className='w-[70px] h-8'>\n          <SelectValue placeholder={currentLanguage.toUpperCase()} />\n        </SelectTrigger>\n        <SelectContent>\n          {availableLanguages.map((lang) => (\n            <SelectItem key={lang} value={lang}>\n              {lang.toUpperCase()}\n            </SelectItem>\n          ))}\n        </SelectContent>\n      </Select>\n    </div>\n  )\n}\n"]}